generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id            String    @id @default(cuid())
    name          String
    firstName     String?
    lastName      String?
    email         String    @unique
    password      String?
    role          UserRole  @default(user)
    isOAuth       Boolean   @default(false)
    isActive      Boolean   @default(true)
    image         String?
    createdAt     DateTime  @default(now())
    lastLogin     DateTime?
    emailVerified DateTime?
    Account       Account[]
    likes         Like[]
    posts         Post[]
    Session       Session[]

    @@index([email])
    @@index([isActive])
}

model Post {
    id         String   @id @default(cuid())
    title      String
    content    String
    published  Boolean? @default(false)
    uploadedAt DateTime @updatedAt
    createdAt  DateTime @default(now())
    authorId   String?
    likes      Like[]
    author     User?    @relation(fields: [authorId], references: [id])

    @@index([authorId])
}

model Like {
    id        String   @id @default(cuid())
    userId    String
    postId    String
    createdAt DateTime @default(now())
    post      Post     @relation(fields: [postId], references: [id])
    user      User     @relation(fields: [userId], references: [id])

    @@unique([userId, postId])
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

enum UserRole {
    user
    admin
}
